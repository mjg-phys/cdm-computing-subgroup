# syntax=docker/dockerfile:1
FROM ubuntu:20.04 as base
ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && \
    apt-get -y --no-install-recommends install \
    build-essential \
    gcc \
    g++ \
    git \
    libssl-dev \
    python3-dev python3-pip\
    htop vim \
    ca-certificates \
    cvs subversion fastlink\
    wget libgsl-dev pkg-config libhdf5-serial-dev libboost-all-dev \
    dpkg-dev cmake binutils libx11-dev libxpm-dev libxft-dev libxext-dev \
    gfortran libpcre3-dev xlibmesa-glu-dev libglew-dev libftgl-dev \
    libmysqlclient-dev libfftw3-dev libcfitsio-dev graphviz-dev libavahi-compat-libdnssd-dev \
    libldap2-dev python-dev libxml2-dev libkrb5-dev libgsl0-dev qtwebengine5-dev && \
    rm -rf /var/lib/apt/lists/*
FROM base as more_packages
    RUN apt-get update && apt-get -y install liblog4cpp5v5 liblog4cpp5-dev libxml2 curl wget
FROM more_packages as pip_stuff
RUN pip3 install --upgrade pip && \
    pip3 install jupyterlab awkward numba seaborn tqdm ipywidgets plotly && \
    pip3 install matplotlib_inline Geometry3D && \
    pip3 install flake8 h5py scipy distrax dm-haiku==0.0.5 && \
    pip3 install optax && pip install -U jaxlib && \
    pip3 install fennel_seed[jax] && \
    curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py && \
    python get-pip.py && \
    pip install --upgrade pip && \
    pip install numpy scipy
FROM pip_stuff as install_lhapdf
RUN which python
ENV PYTHONPATH=$PYTHONPATH:/opt/lhapdf/lib/python2.7/site-packages
RUN cd /opt && mkdir lhapdf && \
    wget https://lhapdf.hepforge.org/downloads/?f=LHAPDF-6.5.3.tar.gz -O LHAPDF-6.5.3.tar.gz && \
    tar xf LHAPDF-6.5.3.tar.gz && \
    cd LHAPDF-6.5.3 && \
    ./configure --prefix=/opt/lhapdf && \
    make && \
    make install && \
    cd /opt && rm -r LHAPDF-6.5.3.tar.gz
ENV PATH=$PATH:/opt/lhapdf/bin
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/lhapdf/lib
FROM install_lhapdf as install_pythia
RUN cd /opt && \
    wget -O build_pythia6.sh https://raw.githubusercontent.com/GENIE-MC/Generator/master/src/scripts/build/ext/build_pythia6.sh && \
    /bin/bash -c "source /opt/build_pythia6.sh" && \
    cd /opt && rm -r build_pythia6.sh
ENV PYTHIA6=/opt/v6_428
FROM install_pythia as install_root
RUN cd /opt && \
    git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src && \
    mkdir root_build root_install && cd root_build && \
    cmake -DCMAKE_INSTALL_PREFIX=../root_install -DPython3_EXECUTABLE=/usr/bin/python3\
    -Dpythia6=ON -DPYTHIA6_INCLUDE_DIR=$PYTHIA6/inc -DPYTHIA6_LIBRARY_DIR=$PYTHIA6/lib/libPythia6.so ../root_src && \
    cmake --build . -- install -j2 && \
    /bin/bash -c "source /opt/root_install/bin/thisroot.sh"
FROM install_root as install_genie
RUN cd /opt && \
    git clone https://github.com/GENIE-MC/Generator.git
RUN mkdir /opt/genie && mv /opt/Generator /opt/genie/Generator
ENV GENIE=/opt/genie/Generator
ENV ROOTSYS=/opt/root_install
ENV PATH=$PATH:$ROOTSYS/bin:$GENIE/bin
ENV PYTHIA6=/opt/v6_428
ENV LHAPATH=/opt/lhapdf/share
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:$PYTHIA6/lib/:$ROOTSYS/lib:$GENIE/lib
RUN cd /opt/genie/Generator && \
    /bin/bash -c "source /opt/root_install/bin/thisroot.sh" && \
    ./configure --prefix=/opt/Generator --disable-profiler --disable-validation-tools --disable-cernlib --disable-lhapdf5 \
    --enable-lhapdf6 --with-lhapdf6-inc=/opt/lhapdf/inc --with-lhapdf6-lib=/opt/lhapdf/lib \
    --enable-flux-drivers --enable-geom-drivers --disable-doxygen --enable-test --enable-mueloss --enable-dylibversion \
    --enable-t2k --enable-fnal --enable-atmo --enable-nucleon-decay --disable-masterclass --disable-debug \
    --with-optimiz-level=O2 --with-pythia6-lib=$PYTHIA6/lib && \
    make
FROM install_genie as pathing_stuff
RUN echo "export PATH=/usr/local/lib/nodejs/node-v14.17.0-linux-x64/bin:${PATH}" >> /root/.bashrc && \
    echo "source /opt/root_install/bin/thisroot.sh" >> /root/.bashrc && \
    cd /bin && cp /root/.bashrc .bashrc && \
    cd /opt && cp /root/.bashrc .bashrc
# Create some non-root user that owns the data and other directories by default
RUN useradd -r myuser && \
    mkdir /data && chown myuser /data && \
    mkdir /home/myuser && \
    cd /home/myuser cp /root/.bashrc .bashrc && \
    chown -R myuser /home/myuser
USER myuser
SHELL ["/bin/bash", "-c"]
ENTRYPOINT [ "/bin/bash" ]
